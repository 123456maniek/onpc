<?xml version="1.0" encoding="utf-8"?><!--
  ~ Copyright (C) 2018. Mikhail Kulesh
  ~
  ~ This program is free software: you can redistribute it and/or modify it under the terms of the GNU
  ~ General Public License as published by the Free Software Foundation, either version 3 of the License,
  ~ or (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
  ~ even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  ~ GNU General Public License for more details. You should have received a copy of the GNU General
  ~ Public License along with this program.
  -->

<manifest xmlns:android="http://schemas.android.com/apk/res/android"
        package="com.mkulesh.onpc"
        android:installLocation="auto"
        xmlns:tools="http://schemas.android.com/tools"
        tools:ignore="UnusedAttribute,AllowBackup">

    <uses-sdk
        android:minSdkVersion="16"
        android:targetSdkVersion="29" />

    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name="android.permission.INTERNET" />

    <!-- io.flutter.app.FlutterApplication is an android.app.Application that
         calls FlutterMain.startInitialization(this); in its onCreate method.
         In most cases you can leave this as-is, but you if you want to provide
         additional functionality it is fine to subclass or reimplement
         FlutterApplication and put your custom class here. -->
    <application
        android:name="io.flutter.app.FlutterApplication"
        android:allowBackup="true"
        android:hardwareAccelerated="true"
        android:usesCleartextTraffic="true"
        android:icon="@mipmap/ic_launcher"
        android:roundIcon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:description="@string/app_description"
        tools:ignore="GoogleAppIndexingWarning">
        <activity
            android:name="com.mkulesh.onpc.MainActivity"
            android:label="@string/app_short_name"
            android:hardwareAccelerated="true"
            android:windowSoftInputMode="adjustResize"
            android:launchMode="singleTop"
            android:theme="@style/LaunchTheme"
            android:configChanges="orientation|keyboardHidden|keyboard|screenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode">
            <!-- This keeps the window background of the activity showing
                 until Flutter renders its first frame. It can be removed if
                 there is no splash screen (such as the default splash screen
                 defined in @style/LaunchTheme). -->
            <meta-data
                android:name="io.flutter.app.android.SplashScreenUntilFirstFrame"
                android:value="true" />
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>
                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>
        </activity>
    </application>
</manifest>
